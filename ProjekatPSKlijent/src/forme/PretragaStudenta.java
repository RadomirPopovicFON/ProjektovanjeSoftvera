/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Mesto;
import domen.OpstiDomenskiObjekat;
import domen.Student;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import komunikacija.KomunikacijaKlijent;
import table.model.StudentTableModel;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;
import util.Util;

/**
 *
 * @author Radomir
 */
public class PretragaStudenta extends javax.swing.JPanel{

    
    
    /**
     * Creates new form PretragaStudenta
     */
    public PretragaStudenta() {
        initComponents();
        jTabela.setModel(new StudentTableModel(new ArrayList<>()));
        inicijalizacijaTabele();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jIndeks = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTabela);

        jButton1.setText("Detalji");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Unesi broj indeksa");

        jButton2.setText("PronaÄ‘i");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jIndeks, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jIndeks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
            String ime= jIndeks.getText().trim();
            
            //List<Student> lista = Kontroler.getInstance().nadjiStudente(ime);
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_STUDENTA);
            toZahtev.setParametar(ime);
            
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev);
            
            TransferObjekatOdgovor odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            List<OpstiDomenskiObjekat> listaStudenata = (List<OpstiDomenskiObjekat>)odgovor.getRezultat();
            List<Student> studenti = new ArrayList<>();
            
            StudentTableModel mod = (StudentTableModel) jTabela.getModel();
            for(OpstiDomenskiObjekat o : listaStudenata){
                studenti.add((Student)o);
            }
            mod.setujListu(studenti);
        } catch (IOException ex) {
            Logger.getLogger(PretragaStudenta.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PretragaStudenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int red = jTabela.getSelectedRow();
        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Morate odabrati studenta!");
        } else {
            StudentTableModel model = (StudentTableModel) jTabela.getModel();
            Student s = model.getStudent(red);
            Util.getInstance().put("izabrani_student", s);
            FrmUnosStudenta f = new FrmUnosStudenta(null);
            ((JDialog) SwingUtilities.getWindowAncestor(this)).dispose();
            
            f.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jIndeks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTabela;
    // End of variables declaration//GEN-END:variables
    public void inicijalizacijaTabele(){
        StudentTableModel mod = (StudentTableModel) jTabela.getModel();
       
        try {
            
            
            
            //System.out.println("Velicina: "+Kontroler.getInstance().vratiStudente().size());
            
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_STUDENTE);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev);
            
            TransferObjekatOdgovor odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            List<OpstiDomenskiObjekat> listaStudenata = (List<OpstiDomenskiObjekat>)odgovor.getRezultat();
            
            for(OpstiDomenskiObjekat ss : listaStudenata){
                mod.dodajRed2((Student)ss);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspesno vracanje studenata");
            Logger.getLogger(PretragaStudenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


}

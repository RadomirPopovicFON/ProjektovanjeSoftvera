/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.OpstiDomenskiObjekat;
import domen.Predmet;
import domen.Prijava;
import domen.Rok;
import domen.Student;
import domen.StudentPredmet;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import komunikacija.KomunikacijaKlijent;
import table.model.PrijavaIspitaTableModel;
import table.model.StudentPredmetTableModel;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

/**
 *
 * @author Radomir
 */
public class PrijavaIspita extends javax.swing.JPanel {
    
    


    Student s;
    
    Date danasnjiDatum = Calendar.getInstance().getTime();
    /**
     * Creates new form PrijavaIspita
     */
    public PrijavaIspita(Student s) {
        this.s = s;
        initComponents();
        popuniFormu();
        preuzmiRokove();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRok = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jComboPredmet = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jtxtPrijavljeniIspiti = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jRok.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jRok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRokActionPerformed(evt);
            }
        });

        jButton1.setText("Prijavi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboPredmet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Ovu prijavu je nemoguće izvršiti");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton1)
                                    .addGap(8, 8, 8))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jComboPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jRok, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jtxtPrijavljeniIspiti, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboPredmet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtPrijavljeniIspiti, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        
        StudentPredmet izabrani = (StudentPredmet)jComboPredmet.getSelectedItem();
        Predmet p = izabrani.getP();
        Prijava pp = new Prijava();
        
        Rok rok = new Rok(((Rok)jRok.getSelectedItem()).getIspitniRokID(),
        (jRok.getSelectedItem()).toString().split(" : ")[0],
        (jRok.getSelectedItem()).toString().split(" : ")[1]);
        
        pp.setR(rok);
        pp.setOcena(-5);
        pp.setP(p);
        
        pp.setS(s);
        
        try {
           // Kontroler.getInstance().dodajPrijavu(pp);
            
            TransferObjekatZahtev toZahtev1 = new TransferObjekatZahtev();
            toZahtev1.setOperacija(Konstante.SACUVAJ_PRIJAVU);
            toZahtev1.setParametar(pp);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev1);
            TransferObjekatOdgovor odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            
        } catch (Exception ex) {
            Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRokActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboPredmet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox jRok;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jtxtPrijavljeniIspiti;
    // End of variables declaration//GEN-END:variables

    private void popuniFormu() {
        String text ="";
        try {
            
            TransferObjekatZahtev toZahtev1 = new TransferObjekatZahtev();
            toZahtev1.setOperacija(Konstante.VRATI_PREDMETE);
            toZahtev1.setParametar((Student)s);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev1);
            TransferObjekatOdgovor odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            List<OpstiDomenskiObjekat> predmeti = (List<OpstiDomenskiObjekat>)odgovor.getRezultat();
            
            //List<OpstiDomenskiObjekat> predmeti = Kontroler.getInstance().vratiPredmete(s);
            
            jComboPredmet.removeAllItems();
                for (OpstiDomenskiObjekat pp : predmeti ) {
                    System.out.println(((StudentPredmet)pp));
                jComboPredmet.addItem(((StudentPredmet)pp));
                   // else System.out.println(((Predmet)pp).getSt().getStudentID()+ " VS "+s.getStudentID());
            }
            
            TransferObjekatZahtev toZahtev2 = new TransferObjekatZahtev();
            toZahtev2.setOperacija(Konstante.VRATI_PRIJAVE);
            toZahtev2.setParametar((Student)s);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev2);
            TransferObjekatOdgovor odgovor2 = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            List<OpstiDomenskiObjekat> prijave = (List<OpstiDomenskiObjekat>)odgovor2.getRezultat();
            
            //List<OpstiDomenskiObjekat> prijave = Kontroler.getInstance().vratiPrijave(s);
            System.out.println("duzina: "+prijave.size());
            for(OpstiDomenskiObjekat o : prijave){
                text+=((Prijava)o)+"\n";
            }
                jtxtPrijavljeniIspiti.setText(text);
            
        } catch (Exception ex) {
            Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    
    private void preuzmiRokove(){
        jRok.removeAllItems();
        try {
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_ROKOVE);
            toZahtev.setParametar((Student)s);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev);
            TransferObjekatOdgovor odgovor=null;
            try {
                
                odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
                for(OpstiDomenskiObjekat ol :(List<OpstiDomenskiObjekat>)odgovor.getRezultat()){
                    System.out.println((Rok)ol);
                    String pocetniDatum = ((Rok)ol).getIspitniRokPeriod().split("-")[0];
                    String krajnjiDatum = ((Rok)ol).getIspitniRokPeriod().split("-")[1];

                    SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
                    Date pocetni = format.parse(pocetniDatum);
                    Date krajnji = format.parse(krajnjiDatum);
                    boolean daLi = danasnjiDatum.after(pocetni) && danasnjiDatum.before(krajnji);
                    if(daLi) {
                        System.out.println("jeste");
                        jRok.addItem(((Rok)ol));
                    }
                    else System.out.println("nije");
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
        }
        	  
	
    }
    private void srediTabelu(){
        List<Prijava> listaPrijavljenihIspita = new ArrayList<>();
        try {
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_PRIJAVE);
            toZahtev.setParametar((Student)s);
            KomunikacijaKlijent.getInstance().posaljiZahtev(toZahtev);
            TransferObjekatOdgovor odgovor = (TransferObjekatOdgovor) KomunikacijaKlijent.getInstance().primiOdgovor();
            
            List<OpstiDomenskiObjekat> listaPredmeta = (List<OpstiDomenskiObjekat>)odgovor.getRezultat();
            for(OpstiDomenskiObjekat ooo : listaPredmeta){
                listaPrijavljenihIspita.add((Prijava)ooo);
            }
            
        } catch (IOException ex) {
            Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PrijavaIspita.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jTable1.setModel(new PrijavaIspitaTableModel(listaPrijavljenihIspita));
    }
    
}
